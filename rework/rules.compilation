
include $(MAKEIT_DIR)/rules.base
include $(MAKEIT_DIR)/rules.dir
include $(MAKEIT_DIR)/rules.log

mk_PARAMETERS     += CMPL TYPE ARCH CFG TAG BUILD_DIR OUT_DIR OUT_NAME OUT_FILE_NAME OUT_FILE
mk_TARGETS        += clean $(CONFIGURATIONS)
mk_FILE_TYPES     += 

CONFIGURATIONS     ?= debug release
debug_doc          ?= target for building with debug options
release_doc        ?= target for building with optimization and without debug options

#-- parameters ...

CMPL               ?= gcc
CMPL_doc           ?= id of compiler suite: {gcc, intel}

TYPE               ?= exe
TYPE_doc           ?= build type: {exe, static, shared}

ARCH               ?= 64
ARCH_doc           ?= architecture id: {32, 64}

CFG                ?= debug
CFG_doc            ?= name of build configuration

TAG                ?= $(CMPL).$(TYPE).$(ARCH).$(CFG)
TAG_doc            ?= string for tagging build directory. default: <CMPL>.<TYPE>.<ARCH>.<CFG>

BUILD_DIR          ?= $(TAG)
BUILD_DIR_doc      ?= working directory for building object files. default: <TAG>

OUT_DIR            ?= $(BUILD_DIR)
OUT_DIR_doc        ?= output directory for putting the output file(s)

OUT_NAME           ?= outname
OUT_NAME_doc       ?= the base name of the final result

OUT_FILE_NAME      ?= $(OUT_NAME).$(TAG)$(mk_OUT_EXT)
OUT_FILE_NAME_doc  ?= the file name of the final result

OUT_FILE           ?= $(OUT_DIR)/$(OUT_FILE_NAME)
OUT_FILE_doc       ?= path and file name of the final result

SRC_FILES          ?= $(foreach t,$(mk_FILE_TYPES),$(wildcard *.$(t))) 


#-- targets ...

$(CONFIGURATIONS):
	$(MAKE) mk_build CFG=$@


mk_build: $(BUILD_DIR)\/
	@echo done


clean_doc = clear build directory [$(BUILD_DIR)] by removing object files
clean:
	@rm -f $(mk_OBJECTS)


#-- internal ...

mk_OUT_EXT_static = .a
mk_OUT_EXT_shared = .so
mk_OUT_EXT_exe    = .exe
mk_OUT_EXT        = $(mk_OUT_EXT_$(TYPE))

mk_OBJECTS        = $(patsubst %,$(BUILD_DIR)/%.o,$(basename $(SRC_FILES)))
mk_FILE_FLAGS     = $($(1)_FLAGS.$(CMPL)) $($(1)_FLAGS.$(CFG)) $($(1)_FLAGS.$(ARCH)) $($(1)_FLAGS.$(TYPE))

