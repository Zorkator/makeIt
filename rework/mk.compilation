
include $(MAKEIT_DIR)/mk.base
include $(MAKEIT_DIR)/mk.log

mk_PARAMETERS     += CMPL TYPE ARCH CFG TAG BUILD_DIR OUT_DIR OUT_NAME OUT_FILE_NAME OUT_FILE
mk_TARGETS        += clean $(CONFIGURATIONS)
mk_FILE_TYPES     += 
mk_TYPES          += exe static shared

CONFIGURATIONS    ?= debug release
debug_doc         ?= target for building with debug options
release_doc       ?= target for building with optimization and without debug options

#-- parameters ...

CMPL               ?= $(firstword $(mk_COMPILERS))
CMPL_doc           ?= name of compiler: {$(call mk_csv,$(mk_COMPILERS))}

TYPE               ?= $(firstword $(mk_TYPES))
TYPE_doc           ?= build type: {$(call mk_csv,$(mk_TYPES))}

ARCH               ?= $(firstword $(mk_ARCHITECTURES))
ARCH_doc           ?= architecture id: {$(call mk_csv,$(mk_ARCHITECTURES))}

CFG                ?= $(firstword $(CONFIGURATIONS))
CFG_doc            ?= name of build configuration: {$(call mk_csv,$(CONFIGURATIONS))}

TAG                ?= $(CMPL).$(TYPE).$(ARCH).$(CFG)
TAG_doc            ?= string for tagging build directory. default: <CMPL>.<TYPE>.<ARCH>.<CFG>

BUILD_DIR          ?= $(TAG)
BUILD_DIR_doc      ?= working directory for building object files. default: <TAG>

OUT_DIR            ?= $(BUILD_DIR)
OUT_DIR_doc        ?= output directory for putting the output file(s)

OUT_NAME           ?= outname
OUT_NAME_doc       ?= the base name of the final result

OUT_FILE_NAME      ?= $(OUT_NAME).$(TAG)$(mk_OUT_EXT)
OUT_FILE_NAME_doc  ?= the file name of the final result

OUT_FILE           ?= $(OUT_DIR)/$(OUT_FILE_NAME)
OUT_FILE_doc       ?= path and file name of the final result

SOURCE_FILES       ?= $(foreach t,$(mk_FILE_TYPES),$(wildcard *.$(t))) 

#-- targets ...

.PHONY:   $(mk_TARGETS) mk_enter mk_preconfig
.DEFAULT: mk_enter

mk_enter: $(_BUILD_DIR)\/ $(_OBJECTS)
	$(mk_LINK)
	@echo done

mk_preconfig:
	@$(MAKE) _BUILD_DIR="$(BUILD_DIR)" _OBJECTS="$(mk_OBJECTS)" mk_enter

$(CONFIGURATIONS):
	@$(MAKE) CFG=$@ mk_preconfig

clean_doc = clear build directory [$(BUILD_DIR)] by removing object files
clean:
	@rm -f $(mk_OBJECTS)

#-- internal ...

mk_OUT_EXT_static = .a
mk_OUT_EXT_shared = .so
mk_OUT_EXT_exe    = .exe
mk_OUT_EXT        = $(mk_OUT_EXT_$(TYPE))

mk_BUILD_CLASSES  = CMPL TYPE ARCH CFG
mk_CLASSES_OF     = $(foreach c,$(sort $(mk_BUILD_CLASSES)),$($(1).$($(c))))

mk_CLASS_FILES    = $(filter-out $(IGNORE_FILES.$($(1))),$(SOURCE_FILES.$($(1))))
__class_files__   = $(foreach c,$(sort $(mk_BUILD_CLASSES)),$(call mk_CLASS_FILES,$(c)))
__source_files__  = $(filter-out $(IGNORE_FILES),$(SOURCE_FILES) $(__class_files__))
mk_OBJECTS        = $(patsubst %,$(BUILD_DIR)/%.o,$(basename $(__source_files__)))

