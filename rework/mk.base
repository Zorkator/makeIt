
#-- set/modify public definitions --

mk_PARAMETERS += 
mk_TARGETS    += help echo.* eval.*

mk_NULL       :=
mk_SPACE      := $(mk_NULL) #
mk_COMMA      := ,
mk_DOLLAR     := $$
mk_ANY        := %

mk_lower       = $(shell echo $(1) | tr A-Z a-z)
mk_upper       = $(shell echo $(1) | tr a-z A-Z)
mk_csv         = $(subst $(mk_SPACE),$(mk_COMMA),$(strip $1))
mk_ssv         = $(subst $(mk_COMMA),$(mk_SPACE),$(strip $1))

#-- targets --

help_doc = print overview over supported parameters and targets
help:
	@echo -e \ $(TARGET_doc)\\n
	@echo == SUPPORTED TARGETS ==
	@echo -e \ $(__tgt_tab)
	@echo == SUPPORTED PARAMETERS ==
	@echo -e \ $(__var_tab)


eval.*_doc = evaluate a make variable by calling with argument, e.g. make eval._mkFunc,arg
__eval     = $(call $(firstword $1),$(wordlist 2,99,$1))
eval.%:
	@echo $(call __eval,$(call mk_ssv,$*))


echo.*_doc = echo make variable, e.g. make echo.CFG
echo.%:
	@echo $* = $($*)


%/:
	@mkdir -p $@


#-- private definitions --

__var_doc = "$(shell printf '%-20s %s  [%s]\\n' '$(1)' '$($(1)_doc)' '$($(1))')"
__var_tab = $(foreach v,$(sort $(mk_PARAMETERS)),$(call __var_doc,$(v)))

__tgt_doc = "$(shell printf '%-10s %s\\n' '$(1)' '$($(1)_doc)')"
__tgt_tab = $(foreach t,$(sort $(mk_TARGETS)),$(call __tgt_doc,$(t)))

