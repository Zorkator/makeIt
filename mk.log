
ifndef __mk_log_included
__mk_log_included := true

include $(dir $(lastword $(MAKEFILE_LIST)))mk.base

mk_PARAMETERS  += LOG LOG_FILE
mk_TARGET_list += log
mk_log          = $(mk_echo) $2 '$1' $(call __log,$3)#<          (call mk_log,<message string>,[<echo-opts>],[renew])
mk_logged_cmd   = $(call mk_log,$1) && $1 $(call __log,$2,$3)#<  (call mk_logged_cmd,<command string>,[<echo-opts>],[renew])


#-- parameters ...

mk_LOG_list       = on off
LOG_doc          ?= switch to enable/disable logging: $(call mk_opt_set,LOG)
LOG_default       = $(firstword $(mk_LOG_list))
mk_LOG            = $(call mk_get,LOG)


LOG_FILE_doc     ?= file for logging build messages.
LOG_FILE_default  = $(mk_BUILD_DIR)/_log.txt
mk_LOG_FILE       = $(call mk_get,LOG_FILE)

#-- targets ...

log_doc = show the logged command output via less
log:
	@if [ -e "$(mk_LOG_FILE)" ]; then                 \
		less $(mk_LOG_FILE)                            ;\
	else                                              \
		$(mk_echo) No log so far. Need to build first! ;\
	fi


#-- definitions for build step logging ...

__log_on  = 2>&1 | tee $(if $1,,-a) $(mk_LOG_FILE)
__log_off =
__log     = $(call __log_$(mk_LOG),$1)

endif # __mk_log_included

